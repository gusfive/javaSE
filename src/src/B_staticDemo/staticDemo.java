package B_staticDemo;

public class staticDemo {
    public static void main(String[] args) {
        //static：静态，可以修饰成员变量、成员方法。
        //成员变量按照有无static修饰，分为两种：类变量、实例变量（对象的变量）
        //类变量：有static修饰，属于类，在计算机中只有一份，会被类的全部对象共享。
        //实例变量（对象的变量）：无static修饰，属于每个对象的。（详情见student类）
        student s1 = new student();
        student.name = "wqr";
        s1.age = 18;
        student s2 = new student();
        s2.age = 19;
        System.out.println(s2.name);

        //类变量的应用场景
        //在开发中，如果某个数据只需要一份，且希望能够被共享（访问、修改），则该数据可以被定义成类变量来记住。(user类)
        new user();
        new user();
        new user();
        user.num++;
        System.out.println(user.num);

        //static修饰成员方法
        //有static修饰的成员方法为类方法（静态方法）、无static修饰的成员方法为实例方法（对象方法）。
        //main方法也是类方法，jvm执行的时候直接test.main。
        //类方法的常见应用场景：做工具类。
        //工具类：工具类中的方法都是一些类方法，每个方法都是用来完成一个功能的，工具类是给开发人员使用的。
        //类方法来设计工具类的好处：提高代码复用；调用方便，提高开发效率。
        //实例方法需要创建对象来调用，此时对象只是为了调用方法，对象占内存，这样会浪费内存。
        //工具类没有创建对象的需求，建议将工具类的构造器进行私有。

        //使用类方法、实例方法时的几点注意事项
        //1.类方法中可以直接访问类的成员，不可以直接访问实例成员。(student1类)
        //2.实例方法中既可以直接访问类成员，也可以直接访问实例成员。
        //3.实例方法中可以出现this关键字，类方法中不可以出现this关键字。
        student1 ss1 = new student1();
        student1.ph();
        ss1.ph1();

        //static应用知识
        /**代码块
         *概述:代码块是类的5大成分之一（成员变量、构造器、方法、代码块、内部类）。
         * 分类：静态代码块，实例代码块。
         * 静态代码块：格式：static{} 特点：类加载时自动执行。由于类只会加载一次，所以静态代码块也只会执行一次。
         *         				作用：完成类的初始化，例如：对类变量的初始化赋值。
         * 实例代码块：格式：{} 特点：每次创建对象时，执行实例代码块，并在构造器前执行。
         *				    作用：和构造器一样，都是用来完成对象的初始化的，例如:对实例变量进行初始化赋值。
         */

        /**单例设计模式(A类)
         * 设计模式：一种问题通常有n种解法，最优的解法被总结出来了，就被称为设计模式。
         * 设计模式有20多种，对应20多种软件开发中遇到的问题。
         * 单例设计模式：确保一个类只有一个对象。
         * 写法：把类的构造器私有。定义一个类变量记住类的一个对象。定义一个类方法，返回对象。
         * 上述为饿汉式单例模式。
         * 懒汉式单例设计模式：拿对象时，才开始创建对象。(B类)
         * 写法：把类的构造器私有。定义一个类变量用于存储对象。提供一个类方法，保证返回的是同一个对象。
         */


    }
}
